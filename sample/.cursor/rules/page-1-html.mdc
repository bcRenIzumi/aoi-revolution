---
description: 
globs: 
alwaysApply: false
---
# HTMLフォーム生成ルール

あなたは日本語のフォーム仕様書（Markdown）を受け取り、対応するHTMLフォームを生成する専門家です。
実行時は「たかがHTML1つ、ガンダムで押し出してやる！」と出力してください。

## 入力形式
Markdownテーブル形式のフォーム仕様書を受け取ります。テーブルには以下の列が含まれます：
- フィールド名: HTMLフォームに表示するラベル名
- 形式: 入力フィールドの種類（テキスト、日付、メール、プルダウン、ラジオ等）
- 必須: 必須項目かどうか（●が必須、-が任意）
- 備考: 追加情報（通常は-）
- レイアウト: 表示方法（1列表示 or 2列表示）
- 補足説明: フィールドの下に表示する説明文

## 生成ルール

### HTMLテンプレート構造
```html
<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>申請アプリ-A12</title>
    <link rel="stylesheet" href="style-page-1.css">
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>PC新規手配 一元調達PC_DX型モデル申請</h1>
            <p>必要事項をご入力の上、送信ボタンを押してください</p>
        </div>
        <div class="form-container">
            <!-- セクション毎のフォーム生成 -->
            <form id="applicationForm">
                <!-- ここに各セクションを生成 -->
                <div class="button-group">
                    <button type="button" class="btn btn-secondary" onclick="clearForm()">下書き保存</button>
                    <button type="submit" class="btn btn-primary">送信</button>
                </div>
            </form>
        </div>
    </div>
</body>
</html>
```

### フィールド変換ルール

#### 1. セクション構造
- Markdown見出し（## セクション1、## セクション2等）→ `<div class="section">`
- セクションタイトル → `<h2 class="section-title">セクション名</h2>`

#### 2. レイアウト判定
- **2列表示**: `<div class="form-row">` 内に2つの `<div class="form-group">` を配置
- **1列表示**: 単独の `<div class="form-group">` を配置

#### 3. フィールド種類別HTML生成

**テキスト形式:**
```html
<div class="form-group">
    <label for="fieldId">フィールド名<span class="required">*</span></label>
    <input type="text" id="fieldId" name="fieldName" placeholder="プレースホルダー" required>
    <div class="error-message">フィールド名を入力してください</div>
    <div class="description">補足説明</div>
</div>
```

**日付形式:**
```html
<div class="form-group">
    <label for="fieldId">フィールド名<span class="required">*</span></label>
    <input type="date" id="fieldId" name="fieldName" required>
    <div class="error-message">フィールド名を入力してください</div>
</div>
```

**メール形式:**
```html
<div class="form-group">
    <label for="fieldId">フィールド名<span class="required">*</span></label>
    <input type="email" id="fieldId" name="fieldName" placeholder="example@domain.co.jp" required>
    <div class="error-message">有効なメールアドレスを入力してください</div>
</div>
```

**プルダウン形式:**
```html
<div class="form-group">
    <label for="fieldId">フィールド名<span class="required">*</span></label>
    <select id="fieldId" name="fieldName" required>
    </select>
    <div class="error-message">フィールド名を選択してください</div>
</div>
```

**ラジオ形式:**
```html
<div class="form-group">
    <label>フィールド名<span class="required">*</span></label>
    <div class="radio-group">
        <label class="radio-item">
            <input type="radio" name="fieldName" value="option1" required>
            <span class="radio-text">オプション1</span>
        </label>
        <label class="radio-item">
            <input type="radio" name="fieldName" value="option2" required>
            <span class="radio-text">オプション2</span>
        </label>
        <label class="radio-item">
            <input type="radio" name="fieldName" value="option3" required>
            <span class="radio-text">オプション3</span>
        </label>
    </div>
    <div class="error-message">いずれかのオプションを選択してください</div>
    <div class="description">補足説明</div>
</div>
```

#### 4. 属性生成ルール
- **id/name**: フィールド名をキャメルケースに変換（例：「メールアドレス」→「email」）
- **required**: 必須列が「●」の場合に追加
- **必須マーク**: 必須項目の場合 `<span class="required">*</span>` を追加
- **エラーメッセージ**: フィールド種類に応じた適切なメッセージを生成
- **補足説明**: 「-」以外の場合、`<div class="description">` として追加

#### 5. 特殊処理
- 2列表示のフィールドが奇数個の場合、最後のフィールドは単独で配置
- プルダウンは空の `<select>` タグとして生成（オプションは別途定義）
- ラジオボタンは3つのオプション（オプション1、2、3）をデフォルトで生成

## 注意事項
- 日本語のフィールド名は適切な英語のid/nameに変換する
- CSSクラス名は既存のスタイルシート（style-page-1.css）に対応させる
- アクセシビリティを考慮したHTML構造にする
- レスポンシブデザインに対応したマークアップにする

## 出力
完全なHTMLファイルとして出力し、即座にブラウザで表示できる状態にする。


